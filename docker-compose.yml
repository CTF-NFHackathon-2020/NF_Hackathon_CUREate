version: '3'
services:
  nfke-app:
    build:
      context: .
      dockerfile: Dockerfile-APP
    image: "jpsfwork99/nfke-app:latest"
    volumes:
      - "./script:/app"
      - "./data:/app/data"
    ports:
      - 8501:8501 
    networks:
      - app-network
    environment:
      - CLINVAR_DATA=data/nf_mutation_info.csv
      - QA_MODEL_URL=http://nfke-qa-api:8000/models/1/doc-qa
    depends_on:
      - nfke-qa-api
    command: "/bin/bash -c 'sleep 30 && streamlit run ./nfke_app.py'"
  nfke-qa-api:
    build:
      context: .
      dockerfile: Dockerfile-API
    image: "jpsfwork99/nfke-qa-cpu:latest"
    ports:
      - 8000:8000
    networks:
      - app-network
    volumes:
      # Optional: mount your own models from disk into the container
      - "./models:/home/user/models"
      - "./data:/home/user/data"
      - "./script:/home/user/script"
    environment:
      # See rest_api/config.py for more variables that you can configure here.
      - DB_HOST=elasticsearch
      - USE_GPU=False
      # Load a model from transformers' model hub or a local path into the FARMReader. Here we use a pretrained biobert model
      - READER_MODEL_PATH=ktrapeznikov/biobert_v1.1_pubmed_squad_v2
      # - READER_MODEL_PATH=home/user/models/roberta-base-squad2
      # Alternative: If you want to use the TransformersReader (e.g. for loading a local model in transformers format):
      # - READER_TYPE=TransformersReader
      # - READER_MODEL_PATH=/home/user/models/roberta-base-squad2
      # - READER_TOKENIZER=/home/user/models/roberta-base-squad2
    restart: always
    depends_on:
      - elasticsearch
    command: "/bin/sh -c 'sleep 15 && gunicorn rest_api.application:app -b 0.0.0.0 -k uvicorn.workers.UvicornWorker --workers 1 --timeout 180 --preload'"
  elasticsearch:
    # This will start an empty elasticsearch instance (so you have to add your documents yourself)
    image: "elasticsearch:7.6.2"
    # If you want a demo image instead that is "ready-to-query" with some indexed Game of Thrones articles:
    #image: "deepset/elasticsearch-game-of-thrones"
    ports:
      - 9200:9200
    networks:
      - app-network
    environment:
      - discovery.type=single-node
      
networks:
  app-network:
    driver: bridge